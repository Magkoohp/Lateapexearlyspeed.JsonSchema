[
  {
    "description": "email format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "email"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid email string",
        "data": "2962",
        "valid": false
      },
      {
        "description": "invalid email string - no local part",
        "data": "@email.com",
        "valid": false
      },
      {
        "description": "invalid email string - domain part starts with '-'",
        "data": "abcde@-email.com",
        "valid": false
      },
      {
        "description": "valid email string",
        "data": "hello.abc-de@email.com",
        "valid": true
      }
    ]
  },
  {
    "description": "regex format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "regex"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid regex string",
        "data": "^(abc]",
        "valid": false
      },
      {
        "description": "valid regex string",
        "data": "a*b",
        "valid": true
      }
    ]
  },
  {
    "description": "ipv4 format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "ipv4"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid ipv4 string",
        "data": "127.0.0.0.1",
        "valid": false
      },
      {
        "description": "valid ipv4 string",
        "data": "127.0.0.1",
        "valid": true
      }
    ]
  },
  {
    "description": "ipv6 format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "ipv6"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid ipv6 string",
        "data": "12345::",
        "valid": false
      },
      {
        "description": "valid ipv6 string",
        "data": "AA22:BB11:1122:CDEF:1234:AA99:7654:7410",
        "valid": true
      }
    ]
  },
  {
    "description": "hostname format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "hostname"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid hostname string",
        "data": "-a-host-name-that-starts-with--",
        "valid": false
      },
      {
        "description": "valid hostname string",
        "data": "a-host-name",
        "valid": true
      }
    ]
  },
  {
    "description": "date format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "date"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid date string",
        "data": "06/19/1963",
        "valid": false
      },
      {
        "description": "valid date string",
        "data": "1963-06-19",
        "valid": true
      }
    ]
  },
  {
    "description": "date-time format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "date-time"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid date-time string",
        "data": "1990-02-31T15:59:60.123-08:00",
        "valid": false
      },
      {
        "description": "valid date-time string",
        "data": "1990-02-25T15:59:59.1-08:00",
        "valid": true
      }
    ]
  },
  {
    "description": "time format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "time"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid time string",
        "data": "08:30:06 PST",
        "valid": false
      },
      {
        "description": "valid time string",
        "data": "08:30:06",
        "valid": true
      }
    ]
  },
  {
    "description": "dotnet-date-time format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "dotnet-date-time"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid dotnet-date-time string with offset",
        "data": "1990-02-25T15:59:60.123-08:00",
        "valid": false
      },
      {
        "description": "invalid dotnet-date-time string without offset",
        "data": "1990-02-25T15:59:59.123",
        "valid": false
      },
      {
        "description": "valid date-time string with float second",
        "data": "1990-02-25T15:59:59.1",
        "valid": true
      },
      {
        "description": "valid date-time string without with float second",
        "data": "1990-02-25T15:59:59",
        "valid": true
      }
    ]
  },
  {
    "description": "json-pointer format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "json-pointer"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid json-pointer string - single ~",
        "data": "/foo/bar~",
        "valid": false
      },
      {
        "description": "invalid json-pointer string - invalid char after ~",
        "data": "/foo/b~ar",
        "valid": false
      },
      {
        "description": "invalid json-pointer string - starts with char not '/'",
        "data": "a/foo",
        "valid": false
      },
      {
        "description": "valid json-pointer string",
        "data": "/foo/0/bar/1",
        "valid": true
      },
      {
        "description": "valid json-pointer string - contains empty token",
        "data": "/foo//bar/",
        "valid": true
      },
      {
        "description": "valid json-pointer string - contains ~0 and ~1 in reference token",
        "data": "/fo~0o/ba~1r",
        "valid": true
      },
      {
        "description": "valid json-pointer string - root",
        "data": "",
        "valid": true
      }
    ]
  },
  {
    "description": "uri format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "uri"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid iri string",
        "data": "http://2001:0db8:85a3:0000:0000:8a2e:0370:7334",
        "valid": false
      },
      {
        "description": "invalid iri string - relative uri",
        "data": "abc/def",
        "valid": false
      },
      {
        "description": "valid iri string - absolute uri",
        "data": "http://test/a/b/c",
        "valid": true
      }
    ]
  },
  {
    "description": "uri-reference format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "uri-reference"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "valid iri-reference - relative uri",
        "data": "/abc/def",
        "valid": true
      },
      {
        "description": "valid iri-reference - absolute uri",
        "data": "http://test/abc/def",
        "valid": true
      }
    ]
  },
  {
    "description": "uuid format",
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "format": "uuid"
    },
    "tests": [
      {
        "description": "all string formats ignore integers",
        "data": 12,
        "valid": true
      },
      {
        "description": "all string formats ignore floats",
        "data": 13.7,
        "valid": true
      },
      {
        "description": "all string formats ignore objects",
        "data": {},
        "valid": true
      },
      {
        "description": "all string formats ignore arrays",
        "data": [],
        "valid": true
      },
      {
        "description": "all string formats ignore booleans",
        "data": false,
        "valid": true
      },
      {
        "description": "all string formats ignore nulls",
        "data": null,
        "valid": true
      },
      {
        "description": "invalid uuid string",
        "data": "2eb8aa08-aa98-11ea-b4aa-73b441d1638",
        "valid": false
      },
      {
        "description": "valid uuid string",
        "data": "23de8e8d-bf00-e4a2-6387-da7de9a1b9d7",
        "valid": true
      }
    ]
  }
]
